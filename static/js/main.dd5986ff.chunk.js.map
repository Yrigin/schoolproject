{"version":3,"sources":["panels/Home.js","panels/zhesar.js","panels/aes.js","App.js","index.js"],"names":["Home","id","go","header","subheader","asideMode","onClick","Zhesar","useState","Bias","setBias","Text","setText","TextShif","setTextShif","left","top","maxLength","value","onChange","e","text","target","t","str","newStr","i","length","charCodeAt","String","fromCharCode","rot","min","max","type","derot","Aes","utils","utf8","toBytes","encryptedHex","hex","fromBytes","App","activePanel","setActivePanel","popout","bridge","send","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dd5986ff.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Panel, PanelHeader, Header, Button, Group, Cell, Div, Avatar, Banner } from '@vkontakte/vkui';\n\nconst Home = ({ id, go, }) => (\n\t<Panel id={id}>\n\t\t<PanelHeader>Дешифратор</PanelHeader>\n\n\n\n\t\t<Group header={<Header >Выберите тип шифра</Header>}>\n\t\t\t<Div>\n\t\t\t\t<Banner header=\"Шифр цезаря\"\n\t\t\t\t\tsubheader=\"Один из самых простых и наиболее широко известных методов шифрования\"\n\t\t\t\t\tasideMode=\"expand\"\n\t\t\t\t\tonClick={() => go('zhesar')}\n\t\t\t\t/>\n\t\t\t\t<Banner header=\"AES\"\n\t\t\t\t\tsubheader=\"Cимметричный алгоритм блочного шифрования\"\n\t\t\t\t\tasideMode=\"expand\"\n\t\t\t\t\tonClick={() => go('aes')}\n\t\t\t\t/>\n\t\t\t</Div>\n\t\t</Group>\n\t</Panel>\n);\n\n\n\nexport default Home;\n","import { FormItem, Input, Panel, PanelHeader, PanelHeaderBack, Textarea } from '@vkontakte/vkui';\nimport React, { useState } from 'react';\nconst Zhesar = ({ id, go }) => {\n    const [Bias, setBias] = useState(1)\n    const [Text, setText] = useState('')\n    const [TextShif, setTextShif] = useState('')\n    \n    const  rot = (str) => { \n      let newStr = \"\";\n      for(var i=0;i<str.length;i++){\n        if(str.charCodeAt(i)>=1){\n          newStr+=String.fromCharCode((str.charCodeAt(i)+Bias));\n        }else{\n          newStr+=String.fromCharCode(str.charCodeAt(i));\n        }\n      }\n      return newStr;\n    }\n    const  derot = (str) => { \n        let newStr = \"\";\n        for(var i=0;i<str.length;i++){\n          if(str.charCodeAt(i)>=1){\n            newStr+=String.fromCharCode((str.charCodeAt(i)-Bias));\n          }else{\n            newStr+=String.fromCharCode(str.charCodeAt(i));\n          }\n        }\n        return newStr;\n      }\n    \n\n\n    const onTextInput = (e) =>\n    {\n        const text = e.target.value\n        setText(text)\n        const  t = rot(text)\n         \n        setTextShif(t)\n    }\n    const onTextShitInput = (e) =>\n    {\n        const text = e.target.value\n        setTextShif(text)\n        const  t = derot(text)\n        setText(t)\n         \n       \n    }\n\n\n\n    return (\n        <Panel id={id}>\n            <PanelHeader\n                left={<PanelHeaderBack onClick={() => go('home')} />}\n            >Шифр Цезаря</PanelHeader>\n            <FormItem top='Обычный текст'>\n                <Textarea\n                maxLength={160}\n                    value={Text}\n                    onChange={onTextInput}\n                ></Textarea>\n            </FormItem>\n            <FormItem top='Смещение'>\n\n                <Input\n                    min={1}\n                    max={25}\n                    type='number'\n                    value={Bias}\n                    onChange={(e) => setBias(e.target.value)}\n                >\n\n                </Input>\n            </FormItem>\n\n            <FormItem top='Шифрованный текст'>\n                <Textarea\n                    value={TextShif}\n                    onChange={onTextShitInput}\n                    maxLength={160}\n                ></Textarea>\n            </FormItem>\n        </Panel>\n    )\n\n\n}\nexport default Zhesar","import { FormItem, Input, Panel, PanelHeader, PanelHeaderBack, Textarea } from '@vkontakte/vkui';\nimport React, { useState } from 'react';\nimport { utils } from 'aes-js';\nconst Aes = ({ id, go }) => {\n\n  const [Text, setText] = useState('')\n  const [TextShif, setTextShif] = useState('')\n\n\n\n\n\n  const onTextInput = (e) => {\n    const text = e.target.value\n    setText(text)\n    const t = utils.utf8.toBytes(text)\n    const encryptedHex = utils.hex.fromBytes(t);\n\n    setTextShif(encryptedHex)\n  }\n  // const onTextShitInput = (e) => {\n  //   const text = e.target.value\n  //   setTextShif(text)\n  //   const encryptedBytes = utils.hex.toBytes(text);\n\n  //   // The counter mode of operation maintains internal state, so to\n  //   // decrypt a new instance must be instantiated.\n   \n\n  //   // Convert our bytes back into text\n  //   var decryptedText =  utils.utf8.fromBytes(encryptedBytes);\n  //   console.log(D)\n  //   setText(decryptedText)\n\n\n  // }\n\n\n\n  return (\n    <Panel id={id}>\n      <PanelHeader\n        left={<PanelHeaderBack onClick={() => go('home')} />}\n      >AES</PanelHeader>\n      <FormItem top='Обычный текст'>\n        <Textarea\n          maxLength={160}\n          value={Text}\n          onChange={onTextInput}\n        ></Textarea>\n      </FormItem>\n\n\n      <FormItem top='Шифрованный текст'>\n        <Textarea\n          value={TextShif}\n          // onChange={onTextShitInput}\n          maxLength={160}\n        ></Textarea>\n      </FormItem>\n    </Panel>\n  )\n\n\n}\nexport default Aes","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { View, ScreenSpinner, AdaptivityProvider, AppRoot } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Zhesar from './panels/zhesar';\nimport Aes from './panels/aes';\n\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\t\n\tconst [popout, setPopout] = useState(null);\n\n\t\n\tconst go = e => {\n\t\tsetActivePanel(e);\n\t};\n\n\treturn (\n\t\t<AdaptivityProvider>\n\t\t\t<AppRoot>\n\t\t\t\t<View activePanel={activePanel} popout={popout}>\n\t\t\t\t\t<Home id='home'  go={go} />\n\t\t\t\t\t<Zhesar id={'zhesar'} go={go}></Zhesar>\n\t\t\t\t\t<Aes id='aes' go={go}></Aes>\n\t\t\t\t</View>\n\t\t\t</AppRoot>\n\t\t</AdaptivityProvider>\n\t);\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}